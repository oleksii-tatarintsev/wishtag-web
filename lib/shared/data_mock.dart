import 'package:uuid/uuid.dart';
import 'package:wishtag_web/data/models.dart';

class DataMock {
  static List<String> get recentActivities => [
    '[2023-05-17] John Doe banned user asda@asdas.com',
    '[2022-11-05] Kriss resolved ticket #123',
    '[2021-07-19] James resolved ticket #213',
    '[2023-01-08] Kriss resolved ticket #1113',
    '[2022-03-22] Michael resolved ticket #41',
    '[2021-12-30] Sam resolved ticket #21',
    '[2022-06-15] Rick resolved ticket #322',
    '[2023-04-03] Alice approved new feature request ticket #504',
    '[2022-10-11] Bob updated system settings',
    '[2021-09-27] Charlie removed inactive user dave@gmail.com',
    '[2022-08-14] Diana created new ticket #789',
    '[2023-02-06] Evan reviewed ticket #456',
    '[2022-05-09] Fiona reset user password for user frank@gmail.com',
    '[2021-11-12] George closed ticket #890',
    '[2023-03-30] Helen escalated ticket #567',
    '[2022-07-01] Ivan resolved ticket #678',
    '[2021-04-18] Julia added new admin role to user kate@gmail.com',
    '[2023-06-22] Kevin assigned ticket #234 to team',
    '[2022-01-31] Laura flagged ticket #345 for review',
    '[2021-08-05] Mike approved pending merge request #112',
    '[2023-04-27] Nina updated ticket #456 with new details',
    '[2022-09-16] Oliver banned user oscar@gmail.com',
    '[2021-10-04] Patricia resolved ticket #789',
    '[2023-07-13] Quentin commented on ticket #890',
    '[2022-02-20] Rachel updated security settings',
  ];

  static List<User> get users => [
    User(
      id: _uuidGenerator(),
      name: 'Oleksii Tatarintsev',
      email: 'o.tatarintsev@wishtag.app',
      photoUrl: 'https://i.imgur.com/a8KvPKc.png',
      userName: 'just_smx',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Oleksii Tatarintsev'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Stan Lee',
      email: 's.lee@marvelcomics.com',
      photoUrl: 'https://i.imgur.com/Nq3KiYL.png',
      userName: 'stanlee',
      status: UserStatus.banned,
      exp: 150,
      wishLists: _generateWishListsForUser('Stan Lee'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Brad Pitt',
      email: 'brad.pitt@gmail.com',
      photoUrl: 'https://i.imgur.com/nbYhqjv.jpeg',
      userName: 'bradpitt',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Brad Pitt'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Edward Norton',
      email: 'edward.norton@gmail.com',
      photoUrl: 'https://i.imgur.com/PQ1oqFM.png',
      userName: 'edwardnorton',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Edward Norton'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Keira Knightley',
      email: 'keira.knightley@gmail.com',
      photoUrl: 'https://i.imgur.com/EP2bEYy.png',
      userName: 'keiraknightley',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Keira Knightley'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Naomie Harris',
      email: 'naomie.harris@gmail.com',
      photoUrl: 'https://i.imgur.com/pTANPNB.png',
      userName: 'naomieharris',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Naomie Harris'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Orlando Bloom',
      email: 'orlando.bloom@gmail.com',
      photoUrl: 'https://i.imgur.com/BfbMJhT.png',
      userName: 'orlandobloom',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Orlando Bloom'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Bryan Cranston',
      email: 'bryan.cranston@gmail.com',
      photoUrl: 'https://i.imgur.com/nwl3qel.png',
      userName: 'bryancranston',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Bryan Cranston'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Natalie Portman',
      email: 'natalie.portman@gmail.com',
      photoUrl: 'https://i.imgur.com/YblwjqK.png',
      userName: 'natalieportman',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Natalie Portman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Megan Fox',
      email: 'megan.fox@gmail.com',
      photoUrl: 'https://i.imgur.com/GhGlsTv.png',
      userName: 'meganfox',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Megan Fox'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Martin Freeman',
      email: 'martin.freeman@gmail.com',
      photoUrl: 'https://i.imgur.com/eZFuRxq.png',
      userName: 'martinfreeman',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Martin Freeman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Samy Naceri',
      email: 'samy.naceri@gmail.com',
      photoUrl: 'https://i.imgur.com/jId3aj7.jpeg',
      userName: 'samynaceri',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Samy Naceri'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Christopher Plummer',
      email: 'christopher.plummer@gmail.com',
      photoUrl: 'https://i.imgur.com/LJEWcQF.png',
      userName: 'christopherplummer',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Christopher Plummer'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Alan Rickman',
      email: 'alan.rickman@gmail.com',
      photoUrl: 'https://i.imgur.com/npEYKPo.png',
      userName: 'alanrickman',
      status: UserStatus.banned,
      exp: 100,
      wishLists: _generateWishListsForUser('Alan Rickman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Samuel L. Jackson',
      email: 'samuel.l.jackson@gmail.com',
      photoUrl: 'https://i.imgur.com/qA9yKf5.png',
      userName: 'samueljackson',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Samuel L. Jackson'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Evanna Lynch',
      email: 'evanna.lynch@gmail.com',
      photoUrl: 'https://i.imgur.com/LIlFG4v.png',
      userName: 'evannalynch',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Evanna Lynch'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'George Clooney',
      email: 'george.clooney@gmail.com',
      photoUrl: 'https://i.imgur.com/vaxezEZ.png',
      userName: 'georgeclooney',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('George Clooney Lee'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Leonardo DiCaprio',
      email: 'leonardo.dicaprio@gmail.com',
      photoUrl: 'https://i.imgur.com/JcXkedn.png',
      userName: 'leonardodicaprio',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Leonardo DiCaprio'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Johnny Depp',
      email: 'johnny.depp@gmail.com',
      photoUrl: 'https://i.imgur.com/2C7ASB5.png',
      userName: 'johnnydepp',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Johnny Depp'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Milla Jovovich',
      email: 'milla.jovovich@gmail.com',
      photoUrl: 'https://i.imgur.com/5QJhhb1.png',
      userName: 'millajovovich',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Milla Jovovich'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Hugh Jackman',
      email: 'hugh.jackman@gmail.com',
      photoUrl: 'https://i.imgur.com/awqwLFB.png',
      userName: 'hughjackman',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Hugh Jackman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Christian Bale',
      email: 'christian.bale@gmail.com',
      photoUrl: 'https://i.imgur.com/CNCleIc.png',
      userName: 'christianbale',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Christian Bale'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Willem Dafoe',
      email: 'willem.dafoe@gmail.com',
      photoUrl: 'https://i.imgur.com/6cLaT3C.png',
      userName: 'willemdafoe',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Willem Dafoe'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Matt Ross',
      email: 'matt.ross@gmail.com',
      photoUrl: 'https://i.imgur.com/fPqMsiW.png',
      userName: 'mattross',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Matt Ross'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Robert De Niro',
      email: 'robert.de.niro@gmail.com',
      photoUrl: 'https://i.imgur.com/ShQIPEb.png',
      userName: 'robertdeniro',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Robert De Niro'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Tom Hanks',
      email: 'tom.hanks@gmail.com',
      photoUrl: 'https://i.imgur.com/rVVbuj9.png',
      userName: 'tomhanks',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Tom Hanks'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Tom Hardy',
      email: 'tom.hardy@gmail.com',
      photoUrl: 'https://i.imgur.com/IgGbqmg.png',
      userName: 'tomhardy',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Tom Hardy'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Michael Fassbender',
      email: 'michael.fassbender@gmail.com',
      photoUrl: 'https://i.imgur.com/dhBKtmZ.png',
      userName: 'michaelfassbender',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Michael Fassbender'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Jennifer Lawrence',
      email: 'jennifer.lawrence@gmail.com',
      photoUrl: 'https://i.imgur.com/REa5sZv.png',
      userName: 'jenniferlawrence',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Jennifer Lawrence'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Margot Robbie',
      email: 'margot.robbie@gmail.com',
      photoUrl: 'https://i.imgur.com/hoX1ebl.png',
      userName: 'margotrobbie',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Margot Robbie'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Gary Oldman',
      email: 'gary.oldman@gmail.com',
      photoUrl: 'https://i.imgur.com/KcBhWuV.png',
      userName: 'garyoldman',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Gary Oldman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Michael Caine',
      email: 'michael.caine@gmail.com',
      photoUrl: 'https://i.imgur.com/tfSZDgT.png',
      userName: 'michaelcaine',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Michael Caine'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Maggie Smith',
      email: 'maggie.smith@gmail.com',
      photoUrl: 'https://i.imgur.com/Ti2ZpTM.png',
      userName: 'maggiesmith',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Maggie Smith'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Ewan McGregor',
      email: 'ewan.mcgregor@gmail.com',
      photoUrl: 'https://i.imgur.com/2hYf0ZT.png',
      userName: 'ewanmcgregor',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Ewan McGregor'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'James Cameron',
      email: 'james.cameron@gmail.com',
      photoUrl: 'https://i.imgur.com/AAEJ587.png',
      userName: 'jamescameron',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('James Cameron'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Helena Bonham Carter',
      email: 'helena.bonham.carter@gmail.com',
      photoUrl: 'https://i.imgur.com/DEuKfrl.png',
      userName: 'helenabonhamcarter',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Helena Bonham Carter'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Jean Reno',
      email: 'jean.reno@gmail.com',
      photoUrl: 'https://i.imgur.com/SANbUlE.png',
      userName: 'jeanreno',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Jean Reno'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Bernard Farcy',
      email: 'bernard.farcy@gmail.com',
      photoUrl: 'https://i.imgur.com/JNbUOMO.png',
      userName: 'bernardfarcy',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Bernard Farcy'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Amanda Seyfried',
      email: 'amanda.seyfried@gmail.com',
      photoUrl: 'https://i.imgur.com/aICEVjh.png',
      userName: 'amandaseyfried',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Amanda Seyfried'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Tobey Maguire',
      email: 'tobey.maguire@gmail.com',
      photoUrl: 'https://i.imgur.com/KKUvEmM.png',
      userName: 'tobeymaguire',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Tobey Maguire'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Julia Roberts',
      email: 'julia.roberts@gmail.com',
      photoUrl: 'https://i.imgur.com/se7bQhr.png',
      userName: 'juliaroberts',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Julia Roberts'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Richard Gere',
      email: 'richard.gere@gmail.com',
      photoUrl: 'https://i.imgur.com/EisjBTg.png',
      userName: 'richardgere',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Richard Gere'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Frédéric Diefenthal',
      email: 'frederic.diefenthal@gmail.com',
      photoUrl: 'https://i.imgur.com/xWM5ewL.png',
      userName: 'fredericdiefenthal',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Frédéric Diefenthal'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'James McAvoy',
      email: 'james.mcavoy@gmail.com',
      photoUrl: 'https://i.imgur.com/GVKDQUP.png',
      userName: 'jamesmcavoy',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('James McAvoy'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Quentin Tarantino',
      email: 'quentin.tarantino@gmail.com',
      photoUrl: 'https://i.imgur.com/wMqp9UF.png',
      userName: 'quentintarantino',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Quentin Tarantino'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Harrison Ford',
      email: 'harrison.ford@gmail.com',
      photoUrl: 'https://i.imgur.com/JTGu7dB.png',
      userName: 'harrisonford',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Harrison Ford'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Annabelle Wallis',
      email: 'annabelle.wallis@gmail.com',
      photoUrl: 'https://i.imgur.com/aTXTUNT.png',
      userName: 'annabellewallis',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Annabelle Wallis'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Cillian Murphy',
      email: 'cillian.murphy@gmail.com',
      photoUrl: 'https://i.imgur.com/cJScaHz.png',
      userName: 'cillianmurphy',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Cillian Murphy'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Uma Thurman',
      email: 'uma.thurman@gmail.com',
      photoUrl: 'https://i.imgur.com/EGJP2ir.png',
      userName: 'umathurman',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Uma Thurman'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Al Pacino',
      email: 'al.pacino@gmail.com',
      photoUrl: 'https://i.imgur.com/y1u5a3A.jpeg',
      userName: 'alpacino',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Al Pacino'),
    ),
    User(
      id: _uuidGenerator(),
      name: 'Mark Sheppard',
      email: 'mark.sheppard@gmail.com',
      photoUrl: 'https://i.imgur.com/MY27QAQ.png',
      userName: 'marksheppard',
      status: UserStatus.active,
      exp: 100,
      wishLists: _generateWishListsForUser('Mark Sheppard'),
    ),
  ];

  static List<WishList> _generateWishListsForUser(String userName) {
    return [
      WishList(
        id: _uuidGenerator(),
        title: '$userName Public Wish List',
        description: 'Public wishes of $userName',
        type: WishListType.public,
        allowedUsers: [],
        wishes: [
          Wish(
            id: _uuidGenerator(),
            title: 'Public Wish 1',
            description: 'A public wish of $userName',
            photos: ['https://example.com/public1.jpg'],
            links: ['https://example.com/public1-info'],
            geoPoints: ['10.0000,20.0000'],
          ),
          Wish(
            id: _uuidGenerator(),
            title: 'Public Wish 2',
            description: 'Another public wish of $userName',
            photos: ['https://example.com/public2.jpg'],
            links: ['https://example.com/public2-info'],
            geoPoints: [],
          ),
        ],
      ),
      WishList(
        id: _uuidGenerator(),
        title: '$userName Private Wish List',
        description: 'Private wishes of $userName',
        type: WishListType.private,
        allowedUsers: [],
        wishes: [
          Wish(
            id: _uuidGenerator(),
            title: 'Private Wish 1',
            description: 'A private wish of $userName',
            photos: ['https://example.com/private1.jpg'],
            links: ['https://example.com/private1-info'],
            geoPoints: [],
          ),
          Wish(
            id: _uuidGenerator(),
            title: 'Private Wish 2',
            description: 'Another private wish of $userName',
            photos: ['https://example.com/private2.jpg'],
            links: ['https://example.com/private2-info'],
            geoPoints: ['30.0000,40.0000'],
          ),
        ],
      ),
      WishList(
        id: _uuidGenerator(),
        title: '$userName Limited Wish List',
        description: 'Limited wishes of $userName',
        type: WishListType.limited,
        allowedUsers: [],
        wishes: [
          Wish(
            id: _uuidGenerator(),
            title: 'Limited Wish 1',
            description: 'A limited wish of $userName',
            photos: ['https://example.com/limited1.jpg'],
            links: ['https://example.com/limited1-info'],
            geoPoints: [],
          ),
          Wish(
            id: _uuidGenerator(),
            title: 'Limited Wish 2',
            description: 'Another limited wish of $userName',
            photos: ['https://example.com/limited2.jpg'],
            links: ['https://example.com/limited2-info'],
            geoPoints: [],
          ),
        ],
      ),
    ];
  }

  static String _uuidGenerator() {
    final uuid = Uuid();
    return uuid.v4().substring(0, 17);
  }
}
